/*
 * Problem029.h
 *
 * <<<Insert short description here>>>
 * 	
 * Author: Stanimir Stoykov
 * $Id: $
 *	
 * Copyright (c) 2004-2012 EGT Ltd.
 * All rights reserved
	
 * More information at: http://www.egt-bg.com
 */

#ifndef PROBLEM029_H_
#define PROBLEM029_H_

#include <cstring>
#include <vector>

/*
 * Consider all integer combinations of a^b for 2 <= a  <= 5 and 2 <=  b <= 5:

	2^2=4, 2^3=8, 2^4=16, 2^5=32
	3^2=9, 3^3=27, 3^4=81, 3^5=243
	4^2=16, 4^3=64, 4^4=256, 4^5=1024
	5^2=25, 5^3=125, 5^4=625, 5^5=3125
	If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:

	4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

	How many distinct terms are in the sequence generated by a^b for 2 <= a <= 100 and 2 <= b <= 100?

	Answer: 9183
 */

void Problem029()
{
	unsigned sums[101];
	unsigned N = 100;

	std::memset(sums, 0, sizeof(sums));

	for ( unsigned a = 2; a <= N; a++ )
	{
		if ( !sums[a] )
		{
			sums[a] = (N-2)+1;
			unsigned j = a*a;
			int idx = 2;
			std::vector<bool> sieve(1000);
			while ( j <= N )
			{
				for ( unsigned i = idx*2; i <= N*idx; i+=idx )
				{
					if ( i > N && !sieve[i] )
					{
						sieve[i] = true;
						sums[j]++;
					}
				}
				idx++;
				j *= a;
			}
		}
	}
	unsigned sum = 0;
	for ( unsigned i = 2; i <= N; i++ )
		sum += sums[i];
	std::cout << sum;
}


#endif /* PROBLEM029_H_ */
